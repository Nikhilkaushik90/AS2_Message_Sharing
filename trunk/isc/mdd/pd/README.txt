В PowerDesigner есть возможность создавать собственные описания для объектно-ориентированных языков, СУБД, процессов и т.д. Именно этой возможностью я и воспользовался. В результате при создании объектно-ориентированной модели (UML) в качестве диалекта языка можно выбрать Cache и генерить COS. 

Функциональность

Что сейчас позволяет делать диалект? Сейчас он позволяет делать preview кода класса в виде именно кода и генерить XML описание классов для импорта в Studio. Поддерживается следующая функциональность при генерации:
- генерация определения класса
- генерация  иерархии наследования
- включение наследования от %Persistent (включено по умолчанию)
- в качестве стереотипов забиты %Persistent, %RegisteredObject, %SerialObject
- генерация свойств классов. Для определения типов  забиты стандартные типы данных для Cache, можно указывать и пользовательские классы
- создаются ассоциации  в виде ссылки на объект класса, Relationship и List
- многие-ко-многим генерятся либо при явном описании  класса-ассоциации, либо при создания ассоциации на связи

Что не поддерживается сейчас:
- генерация методов (они мне были не нужны, так как я говоря красивым языком создавал анемичные доменные модели - проще говоря хранимые классы без логики)
- редактирование и генерация параметров
- создание внутренних (Serial) классов
- импортированный список стандартных классов из %SYS для наследования
- генерация удобных методов для реализации связи многие-ко-многим
- заточка под Ensemble
- индексы и прочее
- видимо массу еще чего, но работать можно

Настройка

1. Качаем файл Cache.xol 
2. Копируем в %PD_HOME%\Resource Files\Object Languages и перестартовываем дезигнер.
3. Если в Tools -> Resources -> Object Languages есть Cache, значит все хорошо

Использование

1. Создаем новую Object Oriented Model: Object Language - Cache, First Diagram - Class Diagram
(в качестве примера можно скачать готовую модель)
2. Создаем пакеты, классы, атрибуты (свойства), ассоциации (связи)
3. У ассоциаций указываем названия ролей и кардинальности
4. Указываем типы у атрибутов (для массовых операций удобно использовать Model -> ...Attrubtes и т.д.)
5. Как только модель готова (для начала можно ограничиться одним пакетом, одним классом) сохраняемся на всякий случай.
6. С помощью Language -> Generate Cache Code генерим код
7. Полученный XML файл импортируем в студию: Tools (Инструменты) -> Import (Импортировать локально)  

Изменение

1.Для правки диалекта используем либо Language -> Edit Current Object Language (доступно при открытом проекте с Cache) либо Tools -> Resources -> Object Languages 
2.Подробней можно поискать в Гугл по фразе PowerDesigner Advanced User Guide
